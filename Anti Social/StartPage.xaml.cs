using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using PSHostsFile;
using System.IO.IsolatedStorage;
using System.IO;
using System.Text.RegularExpressions;



namespace WpfApplication2
{
    /// <summary>
    /// Interaction logic for Page2.xaml
    /// </summary>
    public partial class StartPage : CommonFunctions
    {

        bool backUpHost = true;
        public StartPage()
        {
            InitializeComponent();
                      
        }

        public StartPage(string path):this()
        {
            filePath = path;
            Loaded += StartPage_Loaded;
            ShowsNavigationUI = false;
        }

        private void StartPage_Loaded(object sender, RoutedEventArgs e)         // On loading the page , create a backup of the host file into application . 
        {         
            string hostfile_location = PSHostsFile.HostsFile.GetHostsPath();
          //  System.IO.File.Copy(hostfile_location, @"TextFiles\host", true);
            File.SetAttributes(filePath + "host", FileAttributes.Normal);
            string[] lines = File.ReadAllLines(hostfile_location);
            string matchLine = "#This file is Generated by Anti-Social";
            foreach (string line in lines)                                            //Read the lines in the host file to check if the previous file was created by application. 
            {
                if(Regex.IsMatch(line,matchLine))
                {
                    backUpHost = false;                                               // If the host file was created by application do not make copy .
                    break;
                }
            }
            if (backUpHost)
            {
                File.Copy(hostfile_location, filePath + "host", true);
            }
            File.SetAttributes(filePath + "host", FileAttributes.System | FileAttributes.Hidden);

        }

        private void Highlight(object sender, MouseEventArgs e)
        {
            DefaultSetting.BorderBrush = Brushes.Red; 
        }

        private void GoWithDefault(object sender, RoutedEventArgs e)
        {
           

        }

        private void GoToCustomizeList(object sender, RoutedEventArgs e)
        {
            NavigationWindow win = (NavigationWindow)Window.GetWindow(this);
            win.RemoveBackEntry();
            CustomizeList CLobj = new CustomizeList(filePath);
            this.NavigationService.Navigate(CLobj);
            ShowsNavigationUI = true;
        }

     

        //private void ChangeOpacity(object sender, MouseEventArgs e)
        //{
        //    var button_tri = DefaultSetting.Triggers;
        //}
    }
}
